import { Sequelize, DataTypes, Model } from "sequelize";

export interface IUserAttributes {
  id: number;
  name: string;
  createdAt: string;
  updatedAt: string;
}

export interface IUserModel extends IUserAttributes, Model {
}

export class UserModel extends Model {
  id: number;
  name: string;
  createdAt: string;
  updatedAt: string;
}

export default function(sequelize: Sequelize) {
  const attributes = {
    id: {
      type: DataTypes.BIGINT,
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: null,
      field: 'id',
      unique: 'uk_id',
    },
    name: {
      type: DataTypes.STRING(32),
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: 'user name',
      field: 'name',
    },
    email: {
      type: DataTypes.STRING(32),
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: 'user email',
      field: 'name',
    },
    createdAt: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: 'created time',
      field: 'created_at',
    },
    updatedAt: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: 'update time',
      field: 'updated_at',
    },
  };
  const options = {
    sequelize,
    timestamps: false,
    tableName: 'user',
    underscored: true,
    freezeTableName: true,
    comment: 'user table',
    indexes: [{
      name: 'uk_name_email',
      unique: true,
      fields: [
        'name',
        'email',
      ],
    }]
  };
  UserModel.init(attributes, options);
  return UserModel;
}
